class t{constructor(t){this._events={}}on(t,e){this._events[t]=this._events[t]||[],this._events[t].push(e)}emit(t,...e){let r=this._events[t];r&&r.forEach((t=>{setTimeout((()=>t(...e)),0)}))}}class e{online=!0;cashdrawerOpened=!1;coverOpened=!1;paperLoaded=!0;paperLow=!1}class r{constructor(r){this._working=!1,this._polling=null,this._connected=!1,this._buffer={window:0,cursor:0,data:new Uint8Array(2048)},this._internal={status:new Proxy(new e,this.changeHandler()),emitter:new t,decoder:new TextDecoder,printer:r.printer||null,language:r.language||null,callback:()=>{},response:()=>new Promise((t=>{this._internal.callback=t}))},this._internal.printer&&(this._internal.printer.addEventListener("data",(t=>this.handleData(t))),this._internal.printer.listen(),this._internal.printer.addEventListener("disconnected",(()=>{this._polling&&clearInterval(this._polling),this._connected=!1,this._internal.emitter.emit("disconnected")})),"star-prnt"==this._internal.language&&(this._internal.printer.print(new Uint8Array([29,30,97,3])),this._internal.printer.print(new Uint8Array([27,29,66,49]))),"esc-pos"==this._internal.language&&(this._internal.printer.print(new Uint8Array([29,97,79])),this._internal.printer.print(new Uint8Array([16,20,7,1]))),setTimeout((()=>{this._connected||this._internal.emitter.emit("timeout")}),2e3))}async query(t){let e,r;if(await new Promise((t=>{setTimeout(t,10)})),"star-prnt"==this._internal.language)switch(t){case"manufacturer":e="Star";break;case"firmware":this._internal.printer.print(new Uint8Array([27,35,42,10,0])),e=await this._internal.response();break;case"serialnumber":this._internal.printer.print(new Uint8Array([27,29,41,73,1,0,49])),r=await this._internal.response();let t=r.match(/PrSrN=([0-9]+)[,$]/);t&&(e=t[1]);break;case"fonts":this._internal.printer.print(new Uint8Array([27,29,41,73,3,0,48,0,0])),r=await this._internal.response(),e=r.split(",").filter((t=>t));break;case"interfaces":this._internal.printer.print(new Uint8Array([27,29,41,73,3,0,51,0,0])),e=await this._internal.response();break;default:return}if("esc-pos"==this._internal.language)switch(t){case"firmware":this._internal.printer.print(new Uint8Array([29,73,65])),e=await this._internal.response();break;case"manufacturer":this._internal.printer.print(new Uint8Array([29,73,66])),e=await this._internal.response();break;case"model":this._internal.printer.print(new Uint8Array([29,73,67])),e=await this._internal.response();break;case"serialnumber":this._internal.printer.print(new Uint8Array([29,73,68])),e=await this._internal.response();break;case"fonts":this._internal.printer.print(new Uint8Array([29,73,69])),e=[await this._internal.response()];break;default:return}return e}pollForBarcodes(){this._polling||(this._polling=setInterval((()=>{this._connected&&this._internal.printer.print(new Uint8Array([27,29,66,50]))}),500))}handleData(t){this._buffer.cursor==this._buffer.window&&(this._buffer.cursor=this._buffer.window=0),this._buffer.data.set(new Uint8Array(t.buffer),this._buffer.window),this._buffer.window+=t.byteLength,!1===this._connected&&(this._connected=!0,this._internal.emitter.emit("connected")),this.parseData()}scanUntilLineFeedNul(t,e){let r,a=!1;for(r=t;r<e;r++)if(10==this._buffer.data[r-1]&&0==this._buffer.data[r]){a=!0,r++;break}return a?r:null}parseData(){if(!this._working){for(this._working=!0;this._buffer.cursor<this._buffer.window;){let{cursor:e,window:r}=this._buffer,a=0;if("star-prnt"==this._internal.language)if(t(this._buffer.data[e],0,1)&&t(this._buffer.data[e],4,0)&&t(this._buffer.data[e],7,0)){switch(this._buffer.data[e+0]){case 15:a=7;break;case 33:a=8;break;case 35:a=9;break;case 37:a=10;break;case 39:a=11;break;case 41:a=12;break;case 43:a=13;break;case 45:a=14;break;case 47:a=15;break;case 65:a=16}this._internal.status.online=!(8&this._buffer.data[e+2]),this._internal.status.cashdrawerOpened=!!(4&this._buffer.data[e+2]),this._internal.status.coverOpened=!!(32&this._buffer.data[e+2]),this._internal.status.paperLoaded=!(8&this._buffer.data[e+5])}else if(27==this._buffer.data[e])if(35==this._buffer.data[e+1]&&42==this._buffer.data[e+2]&&44==this._buffer.data[e+3]){let t=this.scanUntilLineFeedNul(e,r);if(null!==t){let r=this._buffer.data.subarray(e+4,t-2);this._internal.callback(this._internal.decoder.decode(r)),a=t-e}}else if(29==this._buffer.data[e+1]&&41==this._buffer.data[e+2]&&73==this._buffer.data[e+3]){let t=this.scanUntilLineFeedNul(e,r);if(null!==t){let r=(255&this._buffer.data[e+5])+this._buffer.data[e+4],i=this._buffer.data.subarray(e+6+r,t-2);this._internal.callback(this._internal.decoder.decode(i)),a=t-e}}else if(29==this._buffer.data[e+1]&&66==this._buffer.data[e+2]&&49==this._buffer.data[e+3])2&this._buffer.data[e+4]&&this.pollForBarcodes(),a=5;else if(29==this._buffer.data[e+1]&&66==this._buffer.data[e+2]&&50==this._buffer.data[e+3]){let t=(255&this._buffer.data[e+5])+this._buffer.data[e+4];if(t>0){let r=this._buffer.data.subarray(e+6,e+6+t-1);this._internal.decoder.decode(r).split("\r").forEach((t=>{""!=(t=t.trim())&&this._internal.emitter.emit("barcode",{value:t})}))}a=6+t}else{let t=this.scanUntilLineFeedNul(e,r);null!==t&&(this._buffer.data.subarray(e,t),a=t-e)}else a=1;if("esc-pos"==this._internal.language)if(t(this._buffer.data[e+0],0,0)&&t(this._buffer.data[e+0],1,0)&&t(this._buffer.data[e+0],4,1)&&t(this._buffer.data[e+0],7,0))this._internal.status.online=!(8&this._buffer.data[e+0]),this._internal.status.cashdrawerOpened=!(4&this._buffer.data[e+0]),this._internal.status.coverOpened=!!(32&this._buffer.data[e+0]),this._internal.status.paperLoaded=!(12&this._buffer.data[e+2]),this._internal.status.paperLow=!!(3&this._buffer.data[e+2]),a=4;else if(95==this._buffer.data[e]){let t,i=!1;for(t=e;t<r;t++)if(0==this._buffer.data[t]){i=!0,t++;break}if(i){let r=this._buffer.data.subarray(e+1,t-1);this._internal.callback(this._internal.decoder.decode(r)),a=t-e}}else a=1;if(0==a)break;this._buffer.cursor+=a}this._working=!1}function t(t,e,r){return(t>>e&1)===r}}changeHandler(){let t=this;return{get:(t,e,r)=>"target"===e?t:Reflect.get(t,e,r),set:(e,r,a)=>(e[r]!==a&&(e[r]=a,t._internal.emitter.emit("update",e)),!0)}}addEventListener(t,e){this._internal.emitter.on(t,e)}get status(){return this._internal.status.target}get connected(){return this._connected}}export{r as default};
